generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}

model User {
  id        String     @id
  email     String     @unique
  name      String?
  avatarUrl String?
  createdAt DateTime   @default(now())
  roleId    String
  posts     Post[]
  projects  Project[]
  tutorials Tutorial[]
  role      Role       @relation(fields: [roleId], references: [id])
}

model Post {
  id         String    @id @default(uuid())
  title      String
  slug       String    @unique
  content    String
  excerpt    String?
  published  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  authorId   String
  categoryId String?
  author     User      @relation(fields: [authorId], references: [id])
  category   Category? @relation(fields: [categoryId], references: [id])
  tags       Tag[]     @relation("PostTags")
  coverImage String?
}

model Project {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  description String
  url         String?
  repo        String?
  techStack   String[]
  featured    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    String
  categoryId  String?
  author      User      @relation(fields: [authorId], references: [id])
  category    Category? @relation(fields: [categoryId], references: [id])
}

model Tutorial {
  id         String     @id @default(uuid())
  title      String
  slug       String     @unique
  difficulty Difficulty
  tags       String[]
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   String
  categoryId String?
  author     User       @relation(fields: [authorId], references: [id])
  category   Category?  @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  createdAt DateTime   @default(now())
  posts     Post[]
  projects  Project[]
  tutorials Tutorial[]
}

model Tag {
  id    String @id @default(uuid())
  name  String
  slug  String @unique
  posts Post[] @relation("PostTags")
}

model FeatureFlag {
  id        String   @id @default(cuid())
  key       String   @unique
  enabled   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Setting {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
